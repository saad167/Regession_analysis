library(data.table)
library(Hmisc)
library(caTools)
setwd("C:/Users/Original Shop/Documents/Disque local (D)/INSEASCHOOL/3éme_anné/regression_grande_dimension/project_R")
bioblanc <- fread(file.path("dataset.csv"))
head(bioblanc)
#Division des données en train_set et test_set
train_set<-bioblanc[seq(1,24)]
test_set<-bioblanc[seq(25,30)]
# Regression multiple Y=f(X1..X7)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=train_set)
#print
print(lm)
#summary
print(summary(lm))
DM_Matrix<-as.matrix(train_set)
rcorr(DM_Matrix, type=c("pearson","spearman"))
Scale_DM<-scale(train_set)
head(Scale_DM)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(train_set,Scale_DM)
head(DT_scale)
#################Construction de T1 ###########################
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.43^2+0.69^2+0.87^2+0.89^2+0.89^2+0.89^2+0.81^2+0.89^2))
*((-0.43*X1_cn)+(0.69* X2_cn)+(0.87*X3_cn)+(0.89* X4_cn)+(0.89* X5_cn)+(0.89* X6_cn)+(0.88* X7_cn)+(0.89* X8_cn)))]
#################Construction de T1 ###########################
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.43^2+0.69^2+0.87^2+0.89^2+0.89^2+0.89^2+0.88^2+0.89^2))
*((-0.43*X1_cn)+(0.69* X2_cn)+(0.87*X3_cn)+(0.89* X4_cn)+(0.89* X5_cn)+(0.89* X6_cn)+(0.88* X7_cn)+(0.89* X8_cn)))]
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale) #Non
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale) #Non
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale) #Non
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale) #Non
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale) #Non
print(summary(lm16))
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale) #Non
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale) #Non
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale) #Non
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale) #Non
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale) #Non
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale) #Oui
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale) #Non
print(summary(lm18))
lm_R12<-lm(formula = X2_cn ~ 0 + T1  , data=DT_scale)
print(lm_R12)
X12<-resid(lm_R12)
DT_scale<- cbind(DT_scale,X12)
X12n<-X12/var(X12)
DT_scale<- cbind(DT_scale,X12n)
lm_Y12<-lm(formula = Y_cn ~ 0 + T1 + X12n  , data=DT_scale)
print(summary(lm_Y12))
T2=( -0.08360*X12)/ 0.08360
DT_scale<-cbind(DT_scale,T2)
DT_scale$T2
lm21<-lm(formula = Y_cn ~ 0 + T1 + T2 + X1_cn, data=DT_scale) #Non
print(summary(lm21))
lm22<-lm(formula = Y_cn ~ 0 + T1 + T2 + X2_cn, data=DT_scale) #Non
print(summary(lm22))
lm23<-lm(formula = Y_cn ~ 0 + T1 + T2 + X3_cn, data=DT_scale) #Non
print(summary(lm23))
lm24<-lm(formula = Y_cn ~ 0 + T1 + T2 + X4_cn, data=DT_scale) #Non
print(summary(lm24))
lm25<-lm(formula = Y_cn ~ 0 + T1 + T2 + X5_cn, data=DT_scale) #Non
print(summary(lm25))
lm21<-lm(formula = Y_cn ~ 0 + T1 + T2 + X1_cn, data=DT_scale) #Non
print(summary(lm21))
lm22<-lm(formula = Y_cn ~ 0 + T1 + T2 + X2_cn, data=DT_scale) #Non
print(summary(lm22))
lm23<-lm(formula = Y_cn ~ 0 + T1 + T2 + X3_cn, data=DT_scale) #Non
print(summary(lm23))
lm24<-lm(formula = Y_cn ~ 0 + T1 + T2 + X4_cn, data=DT_scale) #Non
print(summary(lm24))
lm25<-lm(formula = Y_cn ~ 0 + T1 + T2 + X5_cn, data=DT_scale) #Non
print(summary(lm25))
lm26<-lm(formula = Y_cn ~ 0 + T1 + T2 + X6_cn, data=DT_scale) #Non
print(summary(lm26))
lm27<-lm(formula = Y_cn ~ 0 + T1 + T2 + X7_cn, data=DT_scale) #Non
print(summary(lm27))
lm28<-lm(formula = Y_cn ~ 0 + T1 + T2 + X8_cn, data=DT_scale) #Non
print(summary(lm28))
lm_PLS<-lm(formula = Y ~   T1 + T2, data=DT_scale)
print(summary(lm_PLS))
lm_PLS<-lm(formula = Y ~   T1 + T2, data=DT_scale)
print(summary(lm_PLS))
0.4319*-0.43
0.4319*-0.69
0.4319*0.69
0.298011 -1
0.4319*0.87
0.4319*0.89
0.4319*0.88
Y_pred <- 8.33708 - 0.185717*X1 - 0.701989*X2 + 0.375753*X3 + 0.384391*X4 + 0.384391*X5 + 0.384391*X6 +
0.380072*X7 + 0.384391*X8
attach(test_set)
Y_pred <- 8.33708 - 0.185717*X1 - 0.701989*X2 + 0.375753*X3 + 0.384391*X4 + 0.384391*X5 + 0.384391*X6 +
0.380072*X7 + 0.384391*X8
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
lines(xdata, Y_pred, col="red",lty=2)
attach(test_set)
Y_pred <- 8.33708 - 0.185717*X1 - 0.701989*X2 + 0.375753*X3 + 0.384391*X4 + 0.384391*X5 + 0.384391*X6 +
0.380072*X7 + 0.384391*X8
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
attach(test_set)
Y_pred <- 8.33708 - 0.185717*X1 - 0.701989*X2 + 0.375753*X3 + 0.384391*X4 + 0.384391*X5 + 0.384391*X6 +
0.380072*X7 + 0.384391*X8
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
lines(xdata, Y_pred, col="red",lty=2)
Y_pred = 8.33708 - 0.185717*X1 - 0.701989*X2 + 0.375753*X3 + 0.384391*X4 + 0.384391*X5 + 0.384391*X6 +
0.380072*X7 + 0.384391*X8
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
lines(xdata, Y_pred, col="red",lty=2)
attach(test_set)
Y_pred = 8.33708 - 0.185717*X1 - 0.701989*X2 + 0.375753*X3 + 0.384391*X4 + 0.384391*X5 + 0.384391*X6 +
0.380072*X7 + 0.384391*X8
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
lines(xdata, Y_pred, col="red",lty=2)
# Regression multiple Y=f(X1..X7)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=train_set)
#print
print(lm)
rcorr(DM_Matrix, type=c("pearson","spearman"))
lm_Y12<-lm(formula = Y_cn ~ 0 + T1 + X12n  , data=DT_scale)
print(summary(lm_Y12))
lm_PLS<-lm(formula = Y ~   T1 + T2, data=DT_scale)
print(summary(lm_PLS))
0.4319*0.69
0.4319*-0.43
0.25575 * -0.185717
0.25575 * 0.298011
0.07621631 - 0.18943
0.25575 * 0.375753
0.25575 * 0.384391
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
0.25575 * 0.38
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
0.25097*0.43*-0.48
0.25097*0.43*0.73
0.25097*0.43*0.87
0.25097*0.43*0.88
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
```{r}
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
# Regression y sur T1 et Xj j=1..8
#pour chercher les variables contribuant de manière significative à la construction de T2
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm_PLS<-lm(formula = Y ~ T1 , data=DT_scale)
print(summary(lm_PLS))
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
add <- function(l) {
return (l[1] + l[2])
}
l <- c(4,3)
add(l)
add(DM.dt$Y)
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
add <- function(l) {
return (8.37267 - 0.05180021*l[1] + 0.07877948*l[2] + 0.09388788*l[3] + 0.09496705*l[4] +
0.09496705*l[5] + 0.09496705*l[6] + 0.09496705*l[7] +0.09496705*l[8])
}
DM.dt[,c(1,2,3)]
DM.dt[,c(-1)]
DM.dt[seq(25,30),c(-1)]
sapply(DM.dt[seq(25,30),c(-1)],add)
lapply(DM.dt[seq(25,30),c(-1)],add)
lapply(DM.dt[25,c(-1)],add)
DM.dt[25,c(-1)]
as.matrix(DM.dt[25,c(-1)])
lapply(as.matrix(DM.dt[25,c(-1)]),add)
lapply(as.vector(DM.dt[25,c(-1)]),add)
as.vector(DM.dt[25,c(-1)])
DT_scale<-DT_scale[,':='(Y_fitted=(8.37267 + (-0.05180021*X1)+(0.07877948* X2)+(0.09388788*X3)+
(0.09496705* X4_cn)+(0.09496705* X5_cn)+(0.09496705* X6_cn)+(0.09496705* X7_cn)+
(0.09496705* X8_cn)))
DT_scale<-DT_scale[,':='(Y_fitted=(8.37267 + (-0.05180021*X1)+(0.07877948* X2)+(0.09388788*X3)+
(0.09496705* X4_cn)+(0.09496705* X5_cn)+(0.09496705* X6_cn)+(0.09496705* X7_cn)+
(0.09496705* X8_cn)))]
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, DT_scale$Y_fitted, col="red", pch="*")
lines(xdata, DT_scale$Y_fitted, col="red",lty=2)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, DT_scale$Y_fitted, col="red", pch="*")
lines(xdata, DT_scale$Y_fitted, col="red",lty=2)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, DT_scale$Y_fitted, col="red", pch="*")
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )+
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, DT_scale$Y_fitted, col="red", pch="*")+
lines(xdata, DT_scale$Y_fitted, col="red",lty=2)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )+
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
Y_fitted
DT_scale$Y_fitted
DT_scale$Y
8.37267 -0.05180021
8.37267+0.07877948
8.37267+0.09388788
8.37267+0.09496705
getwd()
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
# Regression y sur T1 et Xj j=1..8
#pour chercher les variables contribuant de manière significative à la construction de T2
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm_PLS<-lm(formula = Y ~ T1 , data=DT_scale)
print(summary(lm_PLS))
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
DT_scale<-DT_scale[,':='(Y_fitted=(8.32087*X1)+(8.451449* X2)+(8.466558*X3)+
(8.467637* X4_cn)+(8.467637* X5_cn)+(8.467637* X6_cn)+(8.467637* X7_cn)+
(8.467637* X8_cn)))]
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
# Regression y sur T1 et Xj j=1..8
#pour chercher les variables contribuant de manière significative à la construction de T2
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm_PLS<-lm(formula = Y ~ T1 , data=DT_scale)
print(summary(lm_PLS))
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
DT_scale<-DT_scale[,':='(Y_fitted=(8.32087*X1)+(8.451449* X2)+(8.466558*X3)+
(8.467637* X4_cn)+(8.467637* X5_cn)+(8.467637* X6_cn)+(8.467637* X7_cn)+
(8.467637* X8_cn))]
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
DT_scale$Y_fitted
DT_scale$Y
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
# Regression y sur T1 et Xj j=1..8
#pour chercher les variables contribuant de manière significative à la construction de T2
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm_PLS<-lm(formula = Y ~ T1 , data=DT_scale)
print(summary(lm_PLS))
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
DT_scale<-DT_scale[,':='(Y_fitted=(8.37267 + (-0.05180021*X1)+(0.07877948* X2)+(0.09388788*X3)+
(0.09496705* X4_cn)+(0.09496705* X5_cn)+(0.09496705* X6_cn)+(0.09496705* X7_cn)+
(0.09496705* X8_cn)))]
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
DT_scale$Y_fitted
DT_scale$Y
DT_scale$Y
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,20) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
