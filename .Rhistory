rcorr(DM_Matrix , type=c("pearson","spearman"))
# Regression simple Y f(X)
lm <- lm(formula = Ln_X11 ~ X1 + X2 + X4 + X5 , data = DM.dt)
print(lm)
#summary
summary(lm)
library(data.table)
library(Hmisc)
library(pls)
library(MASS)
path2data<-file.path("C:/Users/Original Shop/Documents/Disque local (D)/INSEASCHOOL/3éme_anné/regression_grande_dimension")
DM.dt <- fread(file.path(path2data, "Data_Cornell.csv"))
# Regression multiple Y f(X1..X7)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7,
data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
)
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("X1_cn","X2_cn","X3_cn","X4_cn","X5_cn",
"X6_cn","X7_cn","Y_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
View(DT_scale)
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
# On calcule les résidus X12 X16 des regressions de X2_nc, X6_nc sur T1
lm_R12<-lm(formula = X2_cn ~ 0 + T1  , data=DT_scale)
#### Extraction des résidus
X12<-resid(lm_R12)
lm_R16<-lm(formula = X6_cn ~ 0 + T1  , data=DT_scale)
#### Extraction des résidus
X16<-resid(lm_R16)
DT_scale<- cbind(DT_scale,X12,X16)
X12n<-X12/var(X12)
X16n<-X16/var(X16)
DT_scale<- cbind(DT_scale,X12n,X16n)
# Puis on effectue les deux régressions multiples
# Y_cn sur T1 et X1jn = x1j/var(x1j) j=2 et 6
lm_Y12<-lm(formula = Y_cn ~ 0 + T1 + X12n  , data=DT_scale)
lm_Y16<-lm(formula = Y_cn ~ 0 + T1 + X16n  , data=DT_scale)
print(summary(lm_Y12))
print(summary(lm_Y16))
#################Construction de T1 ###########################
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.84^2+0.84^2+0.71^2
+0.99^2+0.74^2))
*((-0.84*X1_cn)+(-0.84* X3_cn)+(-0.71*X4_cn)
+(0.99* X6_cn)+(-0.74* X7_cn)))]
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
# On calcule les résidus X12 X16 des regressions de X2_nc, X6_nc sur T1
lm_R12<-lm(formula = X2_cn ~ 0 + T1  , data=DT_scale)
#### Extraction des résidus
X12<-resid(lm_R12)
lm_R16<-lm(formula = X6_cn ~ 0 + T1  , data=DT_scale)
#### Extraction des résidus
X16<-resid(lm_R16)
DT_scale<- cbind(DT_scale,X12,X16)
X12n<-X12/var(X12)
X16n<-X16/var(X16)
DT_scale<- cbind(DT_scale,X12n,X16n)
# Puis on effectue les deux régressions multiples
# Y_cn sur T1 et X1jn = x1j/var(x1j) j=2 et 6
lm_Y12<-lm(formula = Y_cn ~ 0 + T1 + X12n  , data=DT_scale)
lm_Y16<-lm(formula = Y_cn ~ 0 + T1 + X16n  , data=DT_scale)
print(summary(lm_Y12))
print(summary(lm_Y16))
# Puis on effectue les deux régressions multiples
# Y_cn sur T1 et X1jn = x1j/var(x1j) j=2 et 6
lm_Y12<-lm(formula = Y_cn ~ 0 + T1 + X12n  , data=DT_scale)
lm_Y16<-lm(formula = Y_cn ~ 0 + T1 + X16n  , data=DT_scale)
print(summary(lm_Y12))
print(summary(lm_Y16))
csccs
print("test")
print("test")
plot(lm,2)
pwd
pwd()
getpwd()
4+3
View(DM.dt)
View(DM.dt)
getwd()
DM.dt <- fread(file.path("data.csv"))
DM.dt <- fread(file.path("data.csv"))
library(MASS)
library(data.table)
library(Hmisc)
library(pls)
library(MASS)
```{r}
library(Hmisc)
library(pls)
library(Hmisc)
library(pls)
DM.dt <- fread(file.path("data.csv"))
DM.dt <- fread(file.path(getwd(),"data.csv"))
getwd()
DM.dt <- fread(file.path("data.csv"))
DM.dt <- fread(file.path("dataset.csv"))
DM.dt <- fread(file.path("dataset.csv"))
head(DM.dt)
describe(DM.dt)
mean(DM.dt)
mean(DM.dt["Y"])
mean(DM.dt[,1])
DM.dt[,1]
DM.dt[,c(1)]
DM.dt$Y
mean(DM.dt$Y)
mean(DM.dt$Y) , median(DM.dt$Y)
print(median(DM.dt$Y))
print(mean(DM.dt$Y));
print(mean(DM.dt$Y))
print(median(DM.dt$Y))
print(mean(DM.dt$Y))
print(median(DM.dt$Y))
print(mean(DM.dt$Y))
print(median(DM.dt$Y))
print(mean(DM.dt$Y)) ; print(median(DM.dt$Y))
print(quantile(DM.dt$Y, 0.75)) ; print(min(DM.dt$Y))
print(quantile(DM.dt$Y, 0.75)) ; print(min(DM.dt$Y));print(max(DM.dt$Y))
print(IQR(DM.dt))
print(IQR(DM.dt$Y))
print(IQR(DM.dt$Y)) ; print(sd(DM.dt$Y));print(var(DM.dt$Y))
summary(DM.dt)
summary(DM.dt)
summary(DM.dt)
summary(DM.dt)
summary(DM.dt)
summary(DM.dt)
DM.dt
mean <- c(mean(DM.dt$X1)),mean(DM.dt$X2)),mean(DM.dt$X3)),mean(DM.dt$Y)))
mean <- c(mean(DM.dt$X1),mean(DM.dt$X2),mean(DM.dt$X3),mean(DM.dt$Y))
var <- c(var(DM.dt$X1),var(DM.dt$X2),var(DM.dt$X3),var(DM.dt$Y))
df <- data.frame(mean, var)
df
df.T
summary(DM.dt)
csccs
summary(DM.dt)
df <- data.frame(mean, var)
df <- data.frame(mean, var)
df
t(df)
mean <- c(mean(DM.dt$X1),mean(DM.dt$X2),mean(DM.dt$X3),mean(DM.dt$Y))
var <- c(var(DM.dt$X1),var(DM.dt$X2),var(DM.dt$X3),var(DM.dt$Y))
df <- data.frame(mean, var)
df <- t(df)
df
mean <- c(mean(DM.dt$X1),mean(DM.dt$X2),mean(DM.dt$X3),mean(DM.dt$X4),mean(DM.dt$X5),mean(DM.dt$X6),mean(DM.dt$X7),
mean(DM.dt$X8),mean(DM.dt$Y))
var <- c(var(DM.dt$X1),var(DM.dt$X2),var(DM.dt$X3),var(DM.dt$X4),var(DM.dt$X5),var(DM.dt$X6),var(DM.dt$X7),
var(DM.dt$X8),var(DM.dt$Y))
df <- data.frame(mean, var)
df <- t(df)
df
colnames(DM.dt)
mean <- c(mean(DM.dt$Y),mean(DM.dt$X1),mean(DM.dt$X2),mean(DM.dt$X3),mean(DM.dt$X4),mean(DM.dt$X5),mean(DM.dt$X6),
mean(DM.dt$X7),mean(DM.dt$X8))
var <- c(var(DM.dt$Y),var(DM.dt$X1),var(DM.dt$X2),var(DM.dt$X3),var(DM.dt$X4),var(DM.dt$X5),var(DM.dt$X6),var(DM.dt$X7),
var(DM.dt$X8))
df <- data.frame(mean, var)
df <- t(df)
colnames(df)<-colnames(DM.dt)
df
do.call(cbind, lapply(DM.dt, summary))
rcorr(DM.dt, type=c("pearson","spearman"))
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(X1+X2+X4+X5 , data=DM , main = "Scatter Matrix")
pairs(X1+X2+X4+X5 , data=DM.dt , main = "Scatter Matrix")
pairs(~X1+X2+X4+X5 , data=DM.dt , main = "Scatter Matrix")
pairs(~X1+X2+X4+X3+X5 , data=DM.dt , main = "Scatter Matrix")
library(data.table)
library(data.table)
head(DM.dt)
head(DM)
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X4+X3+X5 , data=DM , main = "Scatter Matrix")
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
library(Hmisc)
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("X1_cn","X2_cn","X3_cn","X4_cn","X5_cn",
"X6_cn","X7_cn","Y_cn")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
DM.dt
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn",
"X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DM.dt
head(DT_scale)
cor(DM_Matrix, type=c("pearson","spearman"))
r
```{r}
corr(DM_Matrix, type=c("pearson","spearman"))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
rcorr(DM_Matrix, type=c("pearson","spearman"))
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2))
*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn)                         +(0.88 X8_cn)))]
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2))
*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn)                         +(0.88*X8_cn)))]
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
add <- function(n,m) {
return n + m
add <- function(n,m) {
return (n + m)
}
add(3,4)
add <- function(n) {
return (n + 4)
}
add(3)
Y
DM.dt$Y
lapply(DM.dt$Y, add)
add <- function(n,m) {
return (n + m)
}
l <- c(4,3)
add(l)
l <- c(4,3)
print(l[1])
add <- function(l) {
return (l[1] + l[2])
}
l <- c(4,3)
print(l[1])
l <- c(4,3)
add(l)
l <- c(4,3)
add(l)
sum(l)
sum(DM.dt$Y)
add(DM.dt$Y)
DM.dt$Y
library(data.table)
library(Hmisc)
library(caTools)
bioblanc <- fread(file.path("dataset.csv"))
setwd("C:/Users/Original Shop/Documents/Disque local (D)/INSEASCHOOL/3éme_anné/regression_grande_dimension/project_R")
bioblanc <- fread(file.path("dataset.csv"))
head(bioblanc)
#Division des données en train_set et test_set
train_set<-bioblanc[seq(1,24)]
test_set<-bioblanc[seq(25,30)]
# Regression multiple Y=f(X1..X7)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=train_set)
#print
print(lm)
#summary
print(summary(lm))
DM_Matrix<-as.matrix(train_set)
rcorr(DM_Matrix, type=c("pearson","spearman"))
Scale_DM<-scale(train_set)
head(Scale_DM)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(train_set,Scale_DM)
head(DT_scale)
#################Construction de T1 ###########################
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.43^2+0.69^2+0.87^2+0.89^2+0.89^2+0.89^2+0.81^2+0.89^2))
*((-0.43*X1_cn)+(0.69* X2_cn)+(0.87*X3_cn)+(0.89* X4_cn)+(0.89* X5_cn)+(0.89* X6_cn)+(0.88* X7_cn)+(0.89* X8_cn)))]
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale) #Non
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale) #Non
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale) #Non
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale) #Non
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale) #Non
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale) #Oui
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale) #Non
print(summary(lm18))
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale) #Non
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale) #Non
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale) #Non
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale) #Non
print(summary(lm13))
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale) #Non
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale) #Non
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale) #Non
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale) #Non
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale) #Non
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale) #Oui
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale) #Non
print(summary(lm18))
lm_R17<-lm(formula = X7_cn ~ 0 + T1  , data=DT_scale)
print(lm_R17)
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale) #Non
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale) #Non
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale) #Non
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale) #Non
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale) #Non
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale) #Oui
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale) #Non
print(summary(lm18))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm_R12<-lm(formula = X2_cn ~ 0 + T1  , data=DT_scale)
print(lm_R12)
X12<-resid(lm_R12)
X17<-resid(lm_R17)
DT_scale<- cbind(DT_scale,X12)
X12n<-X12/var(X12)
DT_scale<- cbind(DT_scale,X12n)
lm_Y12<-lm(formula = Y_cn ~ 0 + T1 + X12n  , data=DT_scale)
print(summary(lm_Y12))
T2=( -0.08360*X12)/ 0.08360
DT_scale<-cbind(DT_scale,T2)
DT_scale$T2
lm21<-lm(formula = Y_cn ~ 0 + T1 + T2 + X1_cn, data=DT_scale) #Non
print(summary(lm21))
lm22<-lm(formula = Y_cn ~ 0 + T1 + T2 + X2_cn, data=DT_scale) #Non
print(summary(lm22))
lm21<-lm(formula = Y_cn ~ 0 + T1 + T2 + X1_cn, data=DT_scale) #Non
print(summary(lm21))
lm22<-lm(formula = Y_cn ~ 0 + T1 + T2 + X2_cn, data=DT_scale) #Non
print(summary(lm22))
lm23<-lm(formula = Y_cn ~ 0 + T1 + T2 + X3_cn, data=DT_scale) #Non
print(summary(lm23))
lm24<-lm(formula = Y_cn ~ 0 + T1 + T2 + X4_cn, data=DT_scale) #Non
print(summary(lm24))
lm25<-lm(formula = Y_cn ~ 0 + T1 + T2 + X5_cn, data=DT_scale) #Non
print(summary(lm25))
lm26<-lm(formula = Y_cn ~ 0 + T1 + T2 + X6_cn, data=DT_scale) #Non
print(summary(lm26))
lm27<-lm(formula = Y_cn ~ 0 + T1 + T2 + X7_cn, data=DT_scale) #Non
print(summary(lm27))
lm28<-lm(formula = Y_cn ~ 0 + T1 + T2 + X8_cn, data=DT_scale) #Non
print(summary(lm28))
lm_PLS<-lm(formula = Y ~   T1 + T2, data=DT_scale)
print(summary(lm_PLS))
attach(test_set)
Y_pred=6.50146556837332-0.0794302243222059*X1+0.0532153618252829*X2+0.0252401648409459*X3+0.0651832234652371*X4+0.0241361681124469*X5+0.000207085420015180*X6-0.00134520130393274*X7+0.000351029766531645*X8
plot(Y,Y_pred)
attach(test_set)
Y_pred=6.50146556837332-0.0794302243222059*X1+0.0532153618252829*X2+0.0252401648409459*X3+0.0651832234652371*X4+0.0241361681124469*X5+0.000207085420015180*X6-0.00134520130393274*X7+0.000351029766531645*X8
plot(test_set$Y,Y_pred)
abline(a=0,b=1)
Y_pred
x <- c(1,2,3,4,5,6)
plot(x,Y_pred ,type="o", col="blue", pch="o", lty=1, ylim=c(0,50) )
plot(x,Y_pred ,type="o", col="blue" )
plot(x,Y_pred ,type="o", col="blue" )
points(x, test_set$Y, col="red", pch="*")
lines(x, test_set$Y, col="red",lty=2)
Y_pred
test_set$Y
plot(x,Y_pred)
plot(test_set$Y,Y_pred)
x <- c(1,2,3,4,5,6)
plot(test_set$Y,Y_pred)
points(x, test_set$Y, col="red", pch="*")
lines(x, test_set$Y, col="red",lty=2)
abline(a=0,b=1)
plot(test_set$Y,Y_pred)
plot(test_set$Y,Y_pred)
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(0,110) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
lines(xdata, Y_pred, col="red",lty=2)
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(0,40) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(0,20) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
lines(xdata, Y_pred, col="red",lty=2)
#plot(test_set$Y,Y_pred)
#abline(a=0,b=1)
xdata <- c(1,2,3,4,5,6)
plot(xdata, test_set$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, Y_pred, col="red", pch="*")
lines(xdata, Y_pred, col="red",lty=2)
