# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(1, 95, legend=c("Y", "Y_fitted"),
col=c("red", "blue"), lty=1:2, cex=0.8)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(1, 95, legend=c("Y", "Y_fitted"), col=c("blue", "red"))
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(legend=c("Y", "Y_fitted"), col=c("blue", "red"))
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,10) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(1,10,legend=c("Y", "Y_fitted"), col=c("blue", "red"))
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,12) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(1,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"))
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(1,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"))
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(1,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(29,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="Main title",
xlab="X axis title",
ylab="Y axis title", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="Y vs Y_fitted",
ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",
ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
xdata <- seq(1,30)
plot(xdata, DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",
ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted[seq(25,30)], col="red", pch="*")
DT_scale$Y_fitted[seq(25,30)]
xdata <- seq(1,30)
plot(xdata, DT_scale$Y[seq(25,30)], type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",ylab="Y", )
xdata <- seq(1,30)
plot(xdata[seq(25,30)], DT_scale$Y[seq(25,30)], type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata[seq(25,30)],  DT_scale$Y_fitted[seq(25,30)], col="red", pch="*")
lines(xdata[seq(25,30)],  DT_scale$Y_fitted[seq(25,30)] , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
xdata <- seq(1,30)
plot(xdata , DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",
ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
# Regression y sur T1 et Xj j=1..8
#pour chercher les variables contribuant de manière significative à la construction de T2
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm_PLS<-lm(formula = Y ~ T1 , data=DT_scale)
print(summary(lm_PLS))
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
DT_scale<-DT_scale[,':='(Y_fitted=(8.37267 + (-0.05180021*X1_cn)+(0.07877948* X2_cn)+(0.09388788*X3_cn)+
(0.09496705* X4_cn)+(0.09496705* X5_cn)+(0.09496705* X6_cn)+(0.09496705* X7_cn)+
(0.09496705* X8_cn)))]
DT_scale$Y_fitted[seq(25,30)]
xdata <- seq(1,30)
plot(xdata , DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",
ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
DT_scale$Y_fitted
DT_scale$Y
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
library(Hmisc)
library(pls)
library(data.table)
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM)
do.call(cbind, lapply(DM, summary))
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
# Regression y sur T1 et Xj j=1..8
#pour chercher les variables contribuant de manière significative à la construction de T2
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm_PLS<-lm(formula = Y ~ T1 , data=DT_scale)
print(summary(lm_PLS))
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
DT_scale<-DT_scale[,':='(Y_fitted=(8.37267 + (-0.05180021*X1_cn)+(0.07877948* X2_cn)+(0.09388788*X3_cn)+
(0.09496705* X4_cn)+(0.09496705* X5_cn)+(0.09496705* X6_cn)+(0.09496705* X7_cn)+
(0.09496705* X8_cn)))]
DT_scale$Y_fitted[seq(25,30)]
xdata <- seq(1,30)
plot(xdata , DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",
ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
DT_scale$Y_fitted
DT_scale$Y
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM.dt)
do.call(cbind, lapply(DM, summary))
boxplot(Y~X1,
data=DM.dt,
main="Different boxplots for each month",
xlab="Month Number",
ylab="Degree Fahrenheit",
col="orange",
border="brown"
)
boxplot(Y~X1,
data=DM.dt,
main="Different boxplots for each month",
xlab="X1",
ylab="Y",
col="yellow",
border="brown"
)
boxplot(Y~X1,
data=DM.dt,
main="Distribution de Y par X1",
xlab="X1",
ylab="Y",
col="yellow",
border="brown"
)
boxplot(Y~X2,
data=DM.dt,
main="Distribution de Y par X2",
xlab="X2",
ylab="Y",
col="yellow",
border="brown"
)
boxplot(Y~X3,
data=DM.dt,
main="Distribution de Y par X3",
xlab="X3",
ylab="Y",
col="yellow",
border="brown"
)
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM.dt)
do.call(cbind, lapply(DM, summary))
boxplot(Y~X1,data=DM.dt,main="Distribution de Y par X1",xlab="X1",ylab="Y",col="yellow",border="brown")
boxplot(Y~X2,data=DM.dt,main="Distribution de Y par X2",xlab="X2",ylab="Y",col="yellow",border="brown")
boxplot(Y~X3,data=DM.dt,main="Distribution de Y par X3",xlab="X3",ylab="Y",col="yellow",border="brown")
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
# Regression y sur T1 et Xj j=1..8
#pour chercher les variables contribuant de manière significative à la construction de T2
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm_PLS<-lm(formula = Y ~ T1 , data=DT_scale)
print(summary(lm_PLS))
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
DT_scale<-DT_scale[,':='(Y_fitted=(8.37267 + (-0.05180021*X1_cn)+(0.07877948* X2_cn)+(0.09388788*X3_cn)+
(0.09496705* X4_cn)+(0.09496705* X5_cn)+(0.09496705* X6_cn)+(0.09496705* X7_cn)+
(0.09496705* X8_cn)))]
DT_scale$Y_fitted[seq(25,30)]
xdata <- seq(1,30)
plot(xdata , DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",
ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
DT_scale$Y_fitted
DT_scale$Y
library(data.table)
library(Hmisc)
library(caTools)
setwd("C:/Users/Original Shop/Documents/Disque local (D)/INSEASCHOOL/3éme_anné/regression_grande_dimension/project_R")
bioblanc <- fread(file.path("dataset.csv"))
head(bioblanc)
#Division des données en train_set et test_set
train_set<-bioblanc[seq(1,24)]
test_set<-bioblanc[seq(25,30)]
# Regression multiple Y=f(X1..X7)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=train_set)
#print
print(lm)
#summary
print(summary(lm))
DM_Matrix<-as.matrix(train_set)
rcorr(DM_Matrix, type=c("pearson","spearman"))
Scale_DM<-scale(train_set)
head(Scale_DM)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(train_set,Scale_DM)
head(DT_scale)
#################Construction de T1 ###########################
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.43^2+0.69^2+0.87^2+0.89^2+0.89^2+0.89^2+0.88^2+0.89^2))
*((-0.43*X1_cn)+(0.69* X2_cn)+(0.87*X3_cn)+(0.89* X4_cn)+(0.89* X5_cn)+(0.89* X6_cn)+(0.88* X7_cn)+(0.89* X8_cn)))]
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale) #Non
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale) #Non
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale) #Non
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale) #Non
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale) #Non
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale) #Non
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale) #Oui
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale) #Non
print(summary(lm18))
lm_R12<-lm(formula = X2_cn ~ 0 + T1  , data=DT_scale)
print(lm_R12)
X12<-resid(lm_R12)
DT_scale<- cbind(DT_scale,X12)
X12n<-X12/var(X12)
DT_scale<- cbind(DT_scale,X12n)
lm_Y12<-lm(formula = Y_cn ~ 0 + T1 + X12n  , data=DT_scale)
print(summary(lm_Y12))
T2=( -0.08360*X12)/ 0.08360
DT_scale<-cbind(DT_scale,T2)
DT_scale$T2
lm21<-lm(formula = Y_cn ~ 0 + T1 + T2 + X1_cn, data=DT_scale) #Non
print(summary(lm21))
lm22<-lm(formula = Y_cn ~ 0 + T1 + T2 + X2_cn, data=DT_scale) #Non
print(summary(lm22))
lm23<-lm(formula = Y_cn ~ 0 + T1 + T2 + X3_cn, data=DT_scale) #Non
print(summary(lm23))
lm24<-lm(formula = Y_cn ~ 0 + T1 + T2 + X4_cn, data=DT_scale) #Non
lm21<-lm(formula = Y_cn ~ 0 + T1 + T2 + X1_cn, data=DT_scale) #Non
print(summary(lm21))
lm22<-lm(formula = Y_cn ~ 0 + T1 + T2 + X2_cn, data=DT_scale) #Non
print(summary(lm22))
lm23<-lm(formula = Y_cn ~ 0 + T1 + T2 + X3_cn, data=DT_scale) #Non
print(summary(lm23))
lm24<-lm(formula = Y_cn ~ 0 + T1 + T2 + X4_cn, data=DT_scale) #Non
print(summary(lm24))
lm25<-lm(formula = Y_cn ~ 0 + T1 + T2 + X5_cn, data=DT_scale) #Non
print(summary(lm25))
lm26<-lm(formula = Y_cn ~ 0 + T1 + T2 + X6_cn, data=DT_scale) #Non
print(summary(lm26))
lm27<-lm(formula = Y_cn ~ 0 + T1 + T2 + X7_cn, data=DT_scale) #Non
print(summary(lm27))
lm28<-lm(formula = Y_cn ~ 0 + T1 + T2 + X8_cn, data=DT_scale) #Non
print(summary(lm28))
lm_PLS<-lm(formula = Y ~   T1 + T2, data=DT_scale)
View(DT_scale)
View(DT_scale)
library(Hmisc)
library(pls)
library(data.table)
DM.dt <- fread(file.path("dataset.csv"))
DM <- DM.dt[,.(X1,X2,X3,Y)]
head(DM.dt)
do.call(cbind, lapply(DM, summary))
boxplot(Y~X1,data=DM.dt,main="Distribution de Y par X1",xlab="X1",ylab="Y",col="yellow",border="brown")
boxplot(Y~X2,data=DM.dt,main="Distribution de Y par X2",xlab="X2",ylab="Y",col="yellow",border="brown")
boxplot(Y~X3,data=DM.dt,main="Distribution de Y par X3",xlab="X3",ylab="Y",col="yellow",border="brown")
DM_Matrix<-as.matrix(DM)
rcorr(DM_Matrix, type=c("pearson","spearman"))
pairs(~X1+X2+X3+Y , data=DM , main = "Scatter Matrix")
DM_Matrix<-as.matrix(DM.dt)
rcorr(DM_Matrix, type=c("pearson","spearman"))
# Regression multiple Y=f(X1..X8)
lm<-lm(formula = Y ~ 0 + X1 + X2+ X3 + X4 + X5 +X6 + X7 + X8, data=DM.dt)
#print
print(lm)
#summary
print(summary(lm))
Scale_DM<-scale(DM.dt)
colnames(Scale_DM)<- c("Y_cn","X1_cn","X2_cn","X3_cn","X4_cn","X5_cn","X6_cn","X7_cn","X8_cn")
DT_scale<- cbind(DM.dt,Scale_DM)
DT_scale<-DT_scale[,':='(T1=(1/sqrt(0.48^2 + 0.73^2 + 0.87^2 + 0.88^2 + 0.88^2 + 0.88^2 + 0.88^2 +
0.88^2))*((-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
(0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)))]
# Regression y sur T1 et Xj j=1..8
#pour chercher les variables contribuant de manière significative à la construction de T2
lm11<-lm(formula = Y_cn ~ 0 + T1 + X1_cn, data=DT_scale)
print(summary(lm11))
lm12<-lm(formula = Y_cn ~ 0 + T1 + X2_cn, data=DT_scale)
print(summary(lm12))
lm13<-lm(formula = Y_cn ~ 0 + T1 + X3_cn, data=DT_scale)
print(summary(lm13))
lm14<-lm(formula = Y_cn ~ 0 + T1 + X4_cn, data=DT_scale)
print(summary(lm14))
lm15<-lm(formula = Y_cn ~ 0 + T1 + X5_cn, data=DT_scale)
print(summary(lm15))
lm16<-lm(formula = Y_cn ~ 0 + T1 + X6_cn, data=DT_scale)
print(summary(lm16))
lm17<-lm(formula = Y_cn ~ 0 + T1 + X7_cn, data=DT_scale)
print(summary(lm17))
lm18<-lm(formula = Y_cn ~ 0 + T1 + X8_cn, data=DT_scale)
print(summary(lm18))
lm_PLS<-lm(formula = Y ~ T1 , data=DT_scale)
print(summary(lm_PLS))
# Y = 8.37267 + 0.25097*T1
# Y = 8.37267 + 0.25097*0.43[(-0.48*X1_cn)+(0.73*X2_cn)+(0.87*X3_cn) +(0.88*X4_cn)+
#                                                (0.88*X5_cn)+(0.88*X6_cn)+(0.88*X7_cn) +(0.88*X8_cn)]
#Y=8.37267 - 0.05180021*X1 + 0.07877948*X2 + 0.09388788*X3 + 0.09496705*X4 + 0.09496705*X5 + 0.09496705*X6 + 0.09496705*X7 +0.09496705*X8
DT_scale<-DT_scale[,':='(Y_fitted=(8.37267 + (-0.05180021*X1_cn)+(0.07877948* X2_cn)+(0.09388788*X3_cn)+
(0.09496705* X4_cn)+(0.09496705* X5_cn)+(0.09496705* X6_cn)+(0.09496705* X7_cn)+
(0.09496705* X8_cn)))]
DT_scale$Y_fitted[seq(25,30)]
xdata <- seq(1,30)
plot(xdata , DT_scale$Y, type="o", col="blue", pch="o", lty=1, ylim=c(7,11),main="'Y' vs 'Y_fitted'",
ylab="Y", )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata,  DT_scale$Y_fitted, col="red", pch="*")
lines(xdata,  DT_scale$Y_fitted , col="red",lty=2)
legend(24,11,legend=c("Y", "Y_fitted"), col=c("blue", "red"), lty=1:2, cex=0.8)
DT_scale$Y_fitted
DT_scale$Y
View(DT_scale)
View(DT_scale)
write.csv(DT_scale,"./test.csv", row.names = FALSE)
